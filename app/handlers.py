from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart

import app.keyboards as kb

router = Router()

money = [0, 5000, 10000, 50000, 100000, 250000]
asks = ['–°–∫–æ–ª—å–∫–æ –≤–µ—Å–∏—Ç —Ç—É—á–∞ –≤ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–º –º–∏—Ä–µ –¥—Ä–∞–∫–æ–Ω–æ–≤?', "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –∏–º–µ–µ—Ç –≤–∫—É—Å –ø–æ–ª—ã–Ω–∏ –≤ —Å–∫–∞–∑–æ—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ –®–æ–∫–æ–ª–µ–Ω–¥–∏–∏?",
        "–°–∫–æ–ª—å–∫–æ —É—à–µ–π —É —Å–ª–æ–Ω–∞ –≤ –º–∏—Ä–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏?", "–ö–∞–∫–æ–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏—è –≤ –¥–µ—Ç—Å–∫–æ–º –º—É–ª—å—Ç—Å–µ—Ä–∏–∞–ª–µ \"–ö–æ—Ç—ç –∏ –ø—ë—Å—ç\"?",
        "–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –±—ã–ª –±—ã –ª—É—á—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –¥–ª—è —Ç–∞–Ω–≥–æ?"]

ask = 0
WinMoney = 0
button = True
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –∏–≥—Ä–µ "–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º, –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É?',
                        reply_markup=kb.keyboardStart)

@router.message(F.text == '–ù–∞—á–∞—Ç—å')
async def game0(message: Message):
    global ask, WinMoney, button
    ask = 0
    WinMoney = 0
    button = True
    await message.reply('–ò–≥—Ä–∞ –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –≤–æ–ø—Ä–æ—Å–æ–≤, 4 –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–∞–∂–¥—ã–π, 1 –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –∞ —Ç–∞–∫–∂–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫', reply_markup=kb.keyboardReady)

@router.message(F.text == '–ì–æ—Ç–æ–≤')
async def game1(message: Message):
    await message.reply(f'–í–æ–ø—Ä–æ—Å ‚Ññ {ask+1}: {asks[ask]}', reply_markup=kb.quest0)

@router.message(F.text == '–°–Ω–æ–≤–∞')
async def game0(message: Message):
    global ask, WinMoney, button
    ask = 0
    WinMoney = 0
    button = True
    await message.reply('–í—ã —Å–Ω–æ–≤–∞ —Ä–µ—à–∏–ª–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ "–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º", –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëá –∫–∞–∫ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã', reply_markup=kb.keyboardReady)


@router.message(F.text == "–ù–µ –≥–æ—Ç–æ–≤")
async  def NotReady(message: Message):
    await message.answer('–ß—Ç–æ–∂, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëá', reply_markup=kb.keyboardStart)

@router.callback_query(F.data == 'true')
async def true(callback: CallbackQuery):
    global ask, WinMoney, button
    await callback.answer()
    if button == False:
        await callback.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å")
    if ask == 4 and button == True:
        await callback.message.answer(
            f"–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ! –Ø –í–∞—Å –ø–æ–∑–¥—Ä–∞–≤–ª—è—é, –í–∞—à –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å = {money[WinMoney + 1]} —Ä—É–±–ª–µ–π! –í—ã –æ–¥–µ—Ä–∂–∞–ª–∏ –ø–æ–±–µ–¥—É! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?",reply_markup=kb.keyboardAgain)
    elif ask < 4 and button == True:
        await callback.message.answer(f"–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ! –Ø –í–∞—Å –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –Ω–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ —Ç–µ–ø–µ—Ä—å {money[WinMoney + 1]} —Ä—É–±–ª–µ–π! –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É - "
                                  "–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å\", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à - \"–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à\"", reply_markup=kb.keyboardDecide)

    if ask < 5 and button == True:
        ask += 1
        WinMoney += 1
        button = False

@router.message(F.text == '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å')
async def next(message:Message):
    global button, ask
    button = True
    if ask >= 5:
        await message.reply("–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã")
    elif ask == 1:
        await message.reply(f'–•–æ—Ä–æ—à–æ, –≤–æ–ø—Ä–æ—Å ‚Ññ{ask+1}: {asks[ask]}', reply_markup=kb.quest1)
    elif ask == 2:
        await message.reply(f'–•–æ—Ä–æ—à–æ, –≤–æ–ø—Ä–æ—Å ‚Ññ{ask+1}: {asks[ask]}', reply_markup=kb.quest2)
    elif ask == 3:
        await message.reply(f'–•–æ—Ä–æ—à–æ, –≤–æ–ø—Ä–æ—Å ‚Ññ{ask+1}: {asks[ask]}', reply_markup=kb.quest3)
    else:
        await message.reply(f'–•–æ—Ä–æ—à–æ, –≤–æ–ø—Ä–æ—Å ‚Ññ{ask+1}: {asks[ask]}', reply_markup=kb.quest4)


@router.callback_query(F.data == 'false')
async def false(callback: CallbackQuery):
    global button
    if button == False:
        await callback.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å")
    else:
        await callback.answer()
        await callback.message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –±–∞–ª–∞–Ω—Å –í–∞—à –æ–±–Ω—É–ª—è–µ—Ç—Å—è, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏üò©. –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ?",reply_markup=kb.keyboardAgain)
    button = False

@router.message(F.text == '–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à')
async def win(message:Message):
    await message.reply(f"–ü–æ–∑–¥–∞–≤–ª—è–µ–º —Å –ø–æ–±–µ–¥–æ–πüòä, –í–∞—à –±–∞–ª–∞–Ω—Å = {money[WinMoney]} —Ä—É–±–ª–µ–π ü§ë! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?",reply_markup=kb.keyboardAgain)

@router.message(F.text == '–ù–µ—Ç')
async def no(message:Message):
    await message.reply(f"–•–æ—Ä–æ—à–æ, {message.from_user.full_name}, –∂–¥–µ–º –í–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è!ü•∞ü•∞ü§ó", reply_markup=kb.keyboardStart)

